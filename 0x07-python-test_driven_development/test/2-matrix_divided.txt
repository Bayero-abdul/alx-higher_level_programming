The matrix_divided module
========================

``matrix_divided()``` returns a new_list containing of
all elements of a matrix

Examples

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[]])
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[]], 0)
	Traceback (most recent call last):
        ...
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[0.1, 4, 3.8], [9, 5, 6]], 4)
	[[0.03, 1.0, 0.95], [2.25, 1.25, 1.5]]

    >>> matrix_divided([[-0.1, 4, 3.8], [9, -5.4, 6]], 4786787867867867867867868976786897678968968976753454534354)
    [[-0.0, 0.0, 0.0], [0.0, -0.0, 0.0]]

	>>> matrix_divided([[0.1, 4, 3.8], [9, 5, 6]], None)
	Traceback (most recent call last):
    	...
	TypeError: div must be a number

	>>> matrix_divided([[-0, 4, 3.8], [9, 5, 6]], -78)
	[[-0.0, -0.05, -0.05], [-0.12, -0.06, -0.08]]

	>>> matrix_divided([[0.1, 4, 3.8], [9, 5, 6]], -0.99)
	[[-0.1, -4.04, -3.84], [-9.09, -5.05, -6.06]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], ["hello"])
   	Traceback (most recent call last):
        ...
	TypeError: div must be a number

	>>> matrix_divided([[1, -2, 3], [4, 5.4, "hello"]], 7)
	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([[6, 7, 2], [3, 5, 5, 7]], 4)
	Traceback (most recent call last):
        ...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([2, 7, 2], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
